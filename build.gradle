/*
 * Moodini
 * Copyright (C) 2016-2017 Marcus Fihlon
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

group 'ch.fihlon.moodini'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-noarg'
apply plugin: 'war'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.sonarqube'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    ext {
        kotlinVersion = '1.1.1'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
    }
}

allOpen {
    annotation('javax.ejb.Stateless')
    annotation('javax.ws.rs.Path')
}

noArg {
    annotation('javax.ws.rs.Path')
}

war {
    archiveName 'moodini.war'
}

jacocoTestReport {
    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarqube.com'
        property 'sonar.projectKey', 'mcpringle:moodini'
        property 'sonar.projectName', 'Moodini'
        property 'sonar.projectVersion', '1.0'
        property 'sonar.sources', 'src/main'
        property 'sonar.java.source', '8'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.junit.reportsPath', 'build/test-results/test'
        property 'sonar.jacoco.reportPaths', 'build/jacoco/test.exec'
        property 'sonar.github.repository', 'McPringle/moodini'
        property 'sonar.links.homepage', 'https://www.moodini.ch/'
        property 'sonar.links.ci', 'https://travis-ci.org/McPringle/moodini'
        property 'sonar.links.scm', 'https://github.com/McPringle/moodini'
        property 'sonar.links.issue', 'https://github.com/McPringle/moodini/issues'
        property 'sonar.exclusions', 'src/main/webapp/bower_components/**'
    }
}

dependencies {
    providedCompile (
            'javax:javaee-api:7.0'                                    // amazing microservice framework
    )
    compile (
            'io.github.microutils:kotlin-logging:1.4.3',              // Kotlin logging with SLF4J
            'com.airhacks:jaxrs-cors:0.0.1',                          // setup CORS extension automatically
            'com.google.code.gson:gson:2.8.0',                        // easy to use JSON parser
            "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",     // Kotlin reflection library
            "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion", // Kotlin standard library
            'org.litote.kmongo:kmongo:3.3.5',                         // Kotlin MongoDB abstraction
            'org.slf4j:slf4j-api:1.7.21',                             // log framework abstraction
            'org.slf4j:slf4j-simple:1.7.21',                          // just logs to the console
            'org.zalando.phrs:jersey-media-json-gson:0.1'             // Jersey GSON entity providers support
    )
    testCompile (
            'io.kotlintest:kotlintest:2.0.0'
    )
}

